# -*- coding: utf-8 -*-

# このプログラムは組み込み関数だけで作られています。

# print()関数を使って、ユーザーに挨拶とプログラムの説明をします。
print('*** 簡単なプロフィール作成プログラム ***')
print('あなたの名前と年齢を教えてください。')
print('----------------------------------')

# input()関数を使い、ユーザーからのキーボード入力を受け取ります。
# 入力された内容は「name」という名前の変数に文字列として保存されます。
name = input('名前を入力してください > ')

# 無限ループを開始します。
# 正しい年齢が入力されるまで、このループは終わりません。
while True:
  # 年齢を尋ね、その入力（文字列）を「age_input」変数に保存します。
  age_input = input('年齢を数字で入力してください > ')

  # try-except構文でエラーが起きる可能性のある処理を囲みます。
  try:
    # int()関数を使って、入力された文字列を整数（数値）に変換します。
    # もし文字や記号が入力されると、ここでエラーが発生します。
    age = int(age_input)
    # 変換が成功したら、break命令でループを強制的に抜けます。
    break
  except ValueError:
    # int()関数での変換が失敗すると、ValueErrorというエラーが発生し、
    # このブロックの処理が実行されます。
    print('（エラー）数字以外が入力されました。もう一度入力してください。')

# len()関数は、文字列やリストなどの「長さ」を数えます。
# ここでは、変数nameに入っている文字列の文字数を数えています。
name_length = len(name)

# 10年後の年齢を計算します。
future_age = age + 10

# print()関数とf文字列（フォーマット済み文字列）を使って、
# 変数と文章を組み合わせたメッセージを表示します。
print('----------------------------------')
print(f'こんにちは、{name}さん！')
print(f'あなたの名前は{name_length}文字ですね。')
print(f'10年後には{future_age}歳になっています。')

# type()関数は、変数がどのような「データの種類（型）」であるかを調べます。
print('\n--- データ型の確認 ---')
print(f'変数「name」の型は {type(name)} です。')
print(f'変数「age」の型は {type(age)} です。')
